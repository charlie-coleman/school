1. Charlie Coleman, Amy Guo
2.
#include <fcntl.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>

int main(int argc, char* argv[]) {
        if (argc != 2) {
                printf("open requires 1 argument: ./open <file path>\n");
                return 0;
        }
        int errnum;
        int fd = open(argv[1], O_RDONLY);
        if (fd == -1) {
                errnum = errno;
                fprintf(stderr, "Error opening file: %s\n", strerror(errnum));
                return 0;
        }
        int bread;
        char buffer[16];
        do {
                bread = read(fd, &buffer, 16);
                if (bread == -1) {
                        errnum = errno;
                        fprintf(stderr, "Error reading file: %s\n", strerror(errnum));
                        return 0;
                }
                write(1, buffer, bread);
        } while (bread != 0 && bread != -1);
        return 0;
}
3. Error opening file: No such file or directory
4. 
5. -1
6. 
if (fd == -1) {
	errnum = errno;
	fprintf(stderr, "Error opening file: %s\n", strerror(errnum));
	return 0;
}
7. error("Error opening file");
8. 
9. Error opening file: No such file or directory
10. 
11. 	open: -1, yes
	close: -1, yes
	read: -1, yes
	write: -1, yes
	printf: <0, no
12. error number is univeral most of the time. Can find the details in the same place every time (errno)	

